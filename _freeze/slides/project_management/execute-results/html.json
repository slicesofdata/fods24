{
  "hash": "29002711c641412c76dab85815770e32",
  "result": {
    "markdown": "---\ntitle: \"Data Mise en Place: Project Management\"\nformat:\n  revealjs: \n    theme: moon\n\n#highlight-style: arrow-light\n    \nslide-number: c/t #h/v\n\n#  width: 1600\n#  height: 900\n#logo: \"images/??.jpg\"\n#css: [\"slides/css/test.scss\"]\n\n#theme: simple\necho: true  # for code echo\n\n#editor: visual\n\nexecute:\n  #enabled: false\n  freeze: auto\n\n# ## **title** {background-color=\"#002b36\"}\n\n---\n\n\n\n## **Mise en Place** \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://www.escoffier.edu/wp-content/uploads/2022/02/Various-ingredients-and-spices-in-seperate-bowls-on-a-metal-tray-768.jpeg)\n:::\n:::\n\n\n## **Mise en Place** \n\n::: incremental\n-   *French* for “everything in its place”\n-   Check the recipe\n-   Collect tools\n-   Gather ingredients, measure out, organize, etc.\n:::\n\n## **Project Management** \n\n::: incremental\n-   Involves orderly management of files\n-   Containing\n    -   Project backup\n    -   See specific changes inside files\n    -   Undo changes (time machine)\n-   [Version Control Summary Video](https://www.youtube.com/watch?v=M-O8ZNW9icQ)\n:::\n\n## **File Organization and Structure** \n\n::: incremental\n-   Projects are ***organized*** by their directory structure\n-   Files are ***not*** stored in a single directory\n-   Files are ***not*** stored in the top project directory\n-   Files ***are*** organized within directories in the project\n    -   similar files ***are*** grouped together\n    -   dissimilar files are ***not*** grouped together\n-   Yes, files are saved logically\n:::\n\n## **Directory Structure for Projects**\n\n::: incremental\n-   `r/`: for `R` code\n    -   or `code/r/` if using multiple languages\n-   `r/scripts`: for scripts to clean data\n-   `data/`: for data files (e.g., `.csv`, `.Rds`, `.xlsx`, etc.)\n-   `data/results`: for data files containing result outputs\n-   `reports`: for report files\n-   `refs`: for references\n-   `docs`: for other documents\n-   `libraries` with `win` and `linux` versions if necessary\n:::\n\n## **File Naming**\n\n::: incremental\n-   Files should be ***named meaningfully*** for humans\n    -   make short and descriptive\n    -   include a version or order number when applicable\n    -   establish a naming convention with collaborators (and follow it)\n    -   make naming convention part of your data management plan\n:::\n\n## **File Naming (Cont.)**\n\n::: incremental\n-   Files should be ***machine readable***\n    -   avoid spaces (use underscore to make readable)\n    -   avoid commas, colons,\n    -   avoid upper or camel casing (just make lowercase)\n    -   \\< 25 characters\n:::\n\n## **Projects in RStudio**\n\n::: incremental\n-   Are contained in a project directory, e.g., `myproject`\n-   Are recognized by file name extension `.Rproj`, e.g., `myproject.Rproj`\n-   `.Rproj` determines the project root on your system\n-   Great for version control and collaboration (e.g., Git, GitHub)\n-   Are portable\n    -   Paths to files can be set relative to the project’s root directory\n:::\n\n## **Managing File Paths using [{here}](https://here.r-lib.org/)**\n\n::: incremental\n-   Library that simplifies path management\n-   Maintains tidy path structure\n-   Removes guesswork of paths\n-   Obviates setting working directory using `setwd()`\n    -   Moving project folder does not break paths\n-   Obviates using `paste()` or [{glue}](https://cran.r-project.org/web/packages/glue/index.html) functions\n:::\n\n## **Managing File Paths using [{here}](https://here.r-lib.org/)**\n\n::: incremental\n-   `here::here()`: returns project root directory\n    -   a character vector\n-   Appends strings to root path\n-   Obviates need to use `\"/\"` (though possible)\n:::\n\n## **Using [{here}](https://here.r-lib.org/)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::here(\"data\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"C:/Users/gcook/Sync/git/fods24/data\"\n```\n:::\n:::\n\n\n## **Using [{here}](https://here.r-lib.org/)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::here(\"data\", \"results\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"C:/Users/gcook/Sync/git/fods24/data/results\"\n```\n:::\n:::\n\n## **Using [{here}](https://here.r-lib.org/)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::here(\"data/results\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"C:/Users/gcook/Sync/git/fods24/data/results\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}