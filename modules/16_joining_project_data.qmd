---
title: "**Joining Project Data**"
author: "Gabriel I. Cook"
#date: "`r Sys.Date()`"
date: "`r format(Sys.time(), '%d %B, %Y')`"

execute:
  #enabled: false
  freeze: auto

---

```{r message=FALSE, warning=FALSE, include=FALSE}
# secret functions
# source(here::here("r", "src", "color_format_text.R"))
```


::: callout-important
## Under construction. 

This page is a work in progress and may contain areas that need more detail or that required syntactical, grammatical, and typographical changes. If you find some part requiring some editing, please let me know so I can fix it for you.
:::


```{r}
#| label: load-packages
#| include: false

#library()
source(here::here("r", "my_functions.R"))

```

# **Overview**

In this module, we will address several concepts related to reading and writing data files. For example, we will address filename extensions and file formats, file paths associated with where files are stored, reading files that are saved in common file formats, writing files to preserve data types, and libraries associated with handling these issues. 

To assist with file paths, we will use the **{here}** library to help manage files stored locally (on your computer) as part of an RStudio project. You will also learn how to **read and write** data files of different formats. Depending how you access data, the process of reading data may change so this topic is discussed in a general way with different approaches described. If you find yourself in a bind with reading data, one of these approaches will likely work. We will cover functions for reading and writing data from `Base R`, as well as **{dplyr}**, **{rio}**, and **{haven}** libraries. 

# **To Do**

## **Supplementary Readings**

- [R Workflow Basics](https://r4ds.had.co.nz/workflow-basics.html)


## **Task**


## **Libraries** 

- **{here}** `r packageVersion("here")`: for file path management
- **{readr}** `r packageVersion("readr")`: for reading `.csv`, `.tsv`, and `.fwf` files
- **{openxlsx}** `r packageVersion("openxlsx")`: for reading Excel spreadsheets from a URL and writing Excel files
- **{haven}** `r packageVersion("haven")`: for reading SPSS, Stata, and SAS files (e.g., `.sav`, `.dta`, `.sas7bdat`, etc. )
- **{rio}** `r packageVersion("rio")`: a Swiss-Army knife for data I/O

Related:

- **{readxl}** `r packageVersion("readxl")`: for reading Excel spreadsheets
